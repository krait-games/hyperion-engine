#version 460
#extension GL_ARB_separate_shader_objects : enable

#include "include/defines.inc"

layout (local_size_x = 8, local_size_y = 8, local_size_z = 1) in;

#include "include/gbuffer.inc"

layout(set = HYP_DESCRIPTOR_SET_GLOBAL, binding = 4) uniform sampler2D deferred_result;
layout(set = HYP_DESCRIPTOR_SET_GLOBAL, binding = 8) uniform sampler2D filter_0;

layout(set = HYP_DESCRIPTOR_SET_GLOBAL, binding = 16, rgba16f) uniform image2D image_storage_test;

//push constants block
layout( push_constant ) uniform constants {
	uint counter_x;
	uint counter_y;
} PushConstants;

void main()
{
    uvec2 instance_id = gl_WorkGroupID.xy;
    instance_id.x = (instance_id.x + PushConstants.counter_x) % gl_WorkGroupSize.x;
    instance_id.y = (instance_id.y + PushConstants.counter_y) % gl_WorkGroupSize.y;
    uvec2 size = gl_WorkGroupSize.xy;
    vec2 uv = vec2(instance_id) / vec2(size);
    vec4 color = vec4(uv, 0.0, 1.0);

    imageStore(image_storage_test, ivec2(gl_GlobalInvocationID.xy), color);
}